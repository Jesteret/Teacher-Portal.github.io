/** SCSS function to return a colour from a list, in hexidecimal or rgba value * @param name: key used in the $colors list associated with a hexadecimal colour * @param opacity: opacity value [0, 100] to be used by the rgba() colour;
 hex (default) to get the solid colour in hexadecimal value **/
 * {
	 box-sizing: border-box;
}
 html, body {
	 height: 100%;
	 font-size: 16px;
	 font-family: Helvetica, Arial, sans-serif, system-ui;
}
 body {
	 display: flex;
	 flex-direction: column;
	 justify-content: center;
	 align-items: center;
	 overflow: hidden;
	 margin: 0;
	 color: #e6e6e6;
	 background: #0b5d59 radial-gradient(circle at center, #66003b 0%, #65003b 8.1%, #62013a 15.5%, #5e0238 22.5%, #580435 29%, #510632 35.3%, #4a082f 41.2%, #420a2b 47.1%, #3b0d27 52.9%, #330f24 58.8%, #2b1120 64.7%, #25131d 71%, #1f151b 77.5%, #1b1619 84.5%, #181717 91.9%, #171717 100%);
}
 h1 {
	 --distance: 0.01em;
	 --dist-factor: 1;
	 position: relative;
	 display: block;
	 margin: 0;
	 font-size: 15vmax;
	 font-weight: normal;
	 font-family: monospace;
	 line-height: 1;
	 color: #db73b0;
	 filter: saturate(150%);
}
 h1 > [data-overlay] {
	 position: relative;
}
 h1 > [data-overlay]::after {
	 --dist-factor: 32;
	 content: attr(data-overlay);
	 position: absolute;
	 left: 0;
	 top: 0;
	 display: flex;
	 justify-content: center;
	 align-items: center;
	 width: 100%;
	 height: 100%;
	 color: #ffd200;
	 font-size: 0.125em;
}
 h1, h1::after, h1 [data-overlay]::after {
	 backface-visibility: hidden;
	 animation: animText 3s linear infinite;
}
 h1::after {
	 --dist-factor: 2;
	 content: attr(data-txt);
	 position: absolute;
	 left: 0;
	 top: 0;
	 color: #73c5c1;
	 mix-blend-mode: screen;
}
 h1::after, h1 [data-overlay]:first-child::after {
	 animation-direction: reverse;
}
 p {
	 position: relative;
	 color: #e6e6e6;
	 text-align: center;
}
 @keyframes animText {
	 0% {
		 transform: rotate(0deg) translate(calc(var(--distance) * -1 * var(--dist-factor)), calc(var(--distance) * -1 * var(--dist-factor))) rotate(0deg);
	}
	 100% {
		 transform: rotate(360deg) translate(calc(var(--distance) * -1 * var(--dist-factor)), calc(var(--distance) * -1 * var(--dist-factor))) rotate(-360deg);
	}
}
 .titanic {
	 position: absolute;
	 left: 0;
	 bottom: 0;
	 width: 100%;
	 height: 0.1725em;
	 font-size: 50vmax;
	 transform-origin: 33.3% 100%;
	 transform: rotate(30deg);
}
 .titanic::before, .titanic::after {
	 content: '';
	 margin: 0 auto;
}
 .titanic::before {
	 position: absolute;
	 left: 0.125em;
	 right: 0.5em;
	 bottom: 100%;
	 width: 0.1em;
	 height: 0.25em;
	 border-radius: 0.0125em;
	 background: #161616;
	 box-shadow: 0.25em 0 0 #161616, 0.5em 0 0 #161616;
}
 .titanic::after {
	 position: absolute;
	 left: 0;
	 right: 0;
	 bottom: 0;
	 width: 1em;
	 height: 0.25em;
	 background: linear-gradient(to bottom, #7e7e7e 19.5%, #730b0b 20.5%, #730b0b 79.5%, #161616 80.5%);
	 clip-path: polygon(0 0, 100% 0, calc(100% - .025em) 0.05em, calc(100% - .1em) 100%, 0.1em 100%, 0.025em 0.05em);
}
 
/* Button */

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		-moz-appearance: none;
		-webkit-appearance: none;
		-ms-appearance: none;
		appearance: none;
		-moz-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
		-webkit-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
		-ms-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
		transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
		border-radius: 4px;
		border: 0;
		cursor: pointer;
		display: inline-block;
		font-weight: 700;
		height: 2.85em;
		line-height: 2.95em;
		padding: 0 1.5em;
		text-align: center;
		text-decoration: none;
		white-space: nowrap;
	}

		input[type="submit"].icon,
		input[type="reset"].icon,
		input[type="button"].icon,
		button.icon,
		.button.icon {
			padding-left: 1.35em;
		}

			input[type="submit"].icon:before,
			input[type="reset"].icon:before,
			input[type="button"].icon:before,
			button.icon:before,
			.button.icon:before {
				margin-right: 0.5em;
			}

		input[type="submit"].fit,
		input[type="reset"].fit,
		input[type="button"].fit,
		button.fit,
		.button.fit {
			display: block;
			margin: 0 0 1em 0;
			width: 100%;
		}

		input[type="submit"].small,
		input[type="reset"].small,
		input[type="button"].small,
		button.small,
		.button.small {
			font-size: 0.8em;
		}

		input[type="submit"].big,
		input[type="reset"].big,
		input[type="button"].big,
		button.big,
		.button.big {
			font-size: 1.35em;
		}

		input[type="submit"].disabled, input[type="submit"]:disabled,
		input[type="reset"].disabled,
		input[type="reset"]:disabled,
		input[type="button"].disabled,
		input[type="button"]:disabled,
		button.disabled,
		button:disabled,
		.button.disabled,
		.button:disabled {
			-moz-pointer-events: none;
			-webkit-pointer-events: none;
			-ms-pointer-events: none;
			pointer-events: none;
			opacity: 0.25;
		}

		@media screen and (max-width: 480px) {

			input[type="submit"],
			input[type="reset"],
			input[type="button"],
			button,
			.button {
				padding: 0;
			}

		}

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		background-color: #041625;
		color: #ffffff !important;
	}

		input[type="submit"]:hover,
		input[type="reset"]:hover,
		input[type="button"]:hover,
		button:hover,
		.button:hover {
			background-color: #06243c;
		}

		input[type="submit"]:active,
		input[type="reset"]:active,
		input[type="button"]:active,
		button:active,
		.button:active {
			background-color: #02080e;
		}

		input[type="submit"].alt,
		input[type="reset"].alt,
		input[type="button"].alt,
		button.alt,
		.button.alt {
			background-color: transparent;
			box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.15);
			color: #ffffff !important;
		}

			input[type="submit"].alt:hover,
			input[type="reset"].alt:hover,
			input[type="button"].alt:hover,
			button.alt:hover,
			.button.alt:hover {
				background-color: rgba(255, 255, 255, 0.075);
			}

			input[type="submit"].alt:active,
			input[type="reset"].alt:active,
			input[type="button"].alt:active,
			button.alt:active,
			.button.alt:active {
				background-color: rgba(255, 255, 255, 0.2);
			}

			input[type="submit"].alt.icon:before,
			input[type="reset"].alt.icon:before,
			input[type="button"].alt.icon:before,
			button.alt.icon:before,
			.button.alt.icon:before {
				color: #676d71;
			}

		input[type="submit"].special,
		input[type="reset"].special,
		input[type="button"].special,
		button.special,
		.button.special {
			background-color: #062038;
			color: #ffffff !important;
		}

			input[type="submit"].special:hover,
			input[type="reset"].special:hover,
			input[type="button"].special:hover,
			button.special:hover,
			.button.special:hover {
				background-color: #082d4f;
			}

			input[type="submit"].special:active,
			input[type="reset"].special:active,
			input[type="button"].special:active,
			button.special:active,
			.button.special:active {
				background-color: #041321;
			}